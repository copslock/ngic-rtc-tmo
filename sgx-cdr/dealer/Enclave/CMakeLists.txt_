set(SOURCE_FILES
        ecalls.cpp
        Enclave_t.c
        Log.c
        pprint.c
        s_client.c
        s_server.c
        ssl_conn_hdlr.cpp
        ${MBEDTLS_SGX_ROOT_DIR}/../mbedtls-ra-attester.c
        ${MBEDTLS_SGX_ROOT_DIR}/../sgxsdk-ra-attester_t.c
        ${MBEDTLS_SGX_ROOT_DIR}/../ra-challenger.c
        memmem.c
        )

add_definitions(-DENCLAVE_STD_ALT -DSGXSDK)

set_directory_properties(PROPERTIES
        ADDITIONAL_MAKE_CLEAN_FILES "Enclave_t.c; Enclave_t.h")

add_custom_command(
        OUTPUT Enclave_t.c
        COMMAND ${SGX_EDGER8R} Enclave.edl
        --search-path ${SGX_SDK}/include
        --search-path ${MBEDTLS_SGX_ROOT_DIR}/lib
        --search-path ${CMAKE_CURRENT_SOURCE_DIR}
        WORKING_DIRECTORY .
)

add_library(enclave SHARED ${SOURCE_FILES})

include_directories(
        $(CMAKE_CURRENT_SOURCE_DIR)
        ${SGX_SDK}/include
        ${SGX_SDK}/include/tlibc
        ${SGX_SDK}/include/stlport
        ${MBEDTLS_SGX_ROOT_DIR}/include
        ${MBEDTLS_SGX_ROOT_DIR}/..
        ${CMAKE_CURRENT_BINARY_DIR}
)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${SGX_COMMON_CFLAGS} -nostdinc -fvisibility=hidden -fpie -fstack-protector")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror -Wall -Wshadow -Wpointer-arith -Wno-unknown-pragmas -Wno-unused-variable  -Wno-unused-function")

set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS} ${CMAKE_C_FLAGS} -nostdinc++ \
   -Wno-variadic-macros")

set(CMAKE_C_FLAGS " -std=gnu99 ${CMAKE_C_FLAGS} -Wmissing-prototypes")

set(LIB_MBEDTLS_PATH "${MBEDTLS_LIB_DIR}/libmbedtls_sgx_t.a")

set_target_properties(enclave PROPERTIES PREFIX "")

target_link_libraries(enclave "${SGX_COMMON_CFLAGS} \
    -Wl,--no-undefined -nostdlib -nodefaultlibs -nostartfiles -L${SGX_LIBRARY_PATH} \
    -Wl,--whole-archive -l${SGX_TRTS_LIB} -Wl,--no-whole-archive \
    -Wl,--start-group ${LIB_MBEDTLS_PATH} -lsgx_tstdc -lsgx_tstdcxx -lsgx_tcrypto -l${SGX_TSVC_LIB} -Wl,--end-group \
    -Wl,-Bstatic -Wl,-Bsymbolic -Wl,--no-undefined \
    -Wl,-pie,-eenclave_entry -Wl,--export-dynamic \
    -Wl,--defsym,__ImageBase=0")

add_custom_command(TARGET enclave
        POST_BUILD
        COMMAND ${SGX_ENCLAVE_SIGNER} sign
        -key Enclave_private.pem
        -config Enclave.config.xml
        -enclave ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/enclave.so
        -out ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/enclave.signed.so
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        COMMENT "Signing the enclave => ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/enclave.signed.so")
